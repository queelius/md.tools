[{"path":"https://queelius.github.io/md.tools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 md.tools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://queelius.github.io/md.tools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Towell. Author, maintainer.","code":""},{"path":"https://queelius.github.io/md.tools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Towell (2023). md.tools: Masked data tools. https://queelius.github.io/md.tools/, https://github.com/queelius/md.tools.","code":"@Manual{,   title = {md.tools: Masked data tools},   author = {Alexander Towell},   year = {2023},   note = {https://queelius.github.io/md.tools/, https://github.com/queelius/md.tools}, }"},{"path":"https://queelius.github.io/md.tools/index.html","id":"r-package-mdtools","dir":"","previous_headings":"","what":"Masked data tools","title":"Masked data tools","text":"miscellaneous set tools working masked data common features masked data. tool set takes inspiration functional programming, inputs outputs defined masked data frames type tbl_md (just data frames), making consistent tidyverse way things. provide set simple functions masked data frames, may used compose complicated functions, particularly using pipe operator %>%.","code":""},{"path":"https://queelius.github.io/md.tools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Masked data tools","text":"can install development version md.tools GitHub : load libraries md.tools tidyverse :","code":"# install.packages(\"devtools\") #devtools::install_github(\"queelius/md.tools\") library(tidyverse) library(md.tools)"},{"path":"https://queelius.github.io/md.tools/index.html","id":"matrices","dir":"","previous_headings":"","what":"Matrices","title":"Masked data tools","text":"lot space md.tools devoted working matrices encoded columns data frames. directly store matrices column, prefer work columns defined primitive types like boolean. Consider boolean matrix C size 10--3: may represent data frame 5 rows columns c1, c2, c3 : may also decode matrix stored data frame : may want work Boolean matrix list. function md_boolean_matrix_to_list uses following transformation: n--m Boolean matrix, (j,k)-element TRUE, j-th vector list contains integer k. can show md candidate set set integers : allow converting three representations: lists integer vectors, Boolean vectors, lists charsets (sets represented strings, e.g., “{ 1, 2 }”. Thus, inverse md_boolean_matrix_to_list just md_list_to_boolean_matrix .","code":"n <- 5 m <- 3 C <- matrix(sample(c(T,F), size=m*n, replace=TRUE), nrow=n) md <- md_encode_matrix(C,\"c\") print(md) #> # A tibble: 5 × 3 #>   c1    c2    c3    #>   <lgl> <lgl> <lgl> #> 1 FALSE TRUE  TRUE  #> 2 TRUE  TRUE  TRUE  #> 3 TRUE  TRUE  TRUE  #> 4 FALSE FALSE FALSE #> 5 FALSE FALSE FALSE print(all(C == md_decode_matrix(md,\"c\"))) #> [1] TRUE md %>% md_boolean_matrix_to_charsets(\"c\", \"candidate set\") #> # A tibble: 5 × 4 #>   c1    c2    c3    `candidate set` #>   <lgl> <lgl> <lgl> <chr>           #> 1 FALSE TRUE  TRUE  {2, 3}          #> 2 TRUE  TRUE  TRUE  {1, 2, 3}       #> 3 TRUE  TRUE  TRUE  {1, 2, 3}       #> 4 FALSE FALSE FALSE {}              #> 5 FALSE FALSE FALSE {}"},{"path":"https://queelius.github.io/md.tools/index.html","id":"decorators","dir":"","previous_headings":"","what":"Decorators","title":"Masked data tools","text":"now consider data frame transformations adds additional columns information may inferred already data frame. reason, chosen call decorators. masked data frame, may column k stores failed component. simulate failed components mark latent : may additionally candidate set encoded Boolean columns c1,…,cm, case may infer whether candidate set contains failed component k : see new column, contains, tells us whether candidate set actually contains failed component. new information given column, presents information already potentially conventient format. Given data frame candidate set, may determine cardinality candidate sets : may unmark column variable latent : latent variable specification metadata masked data frame, necessarily impose requirements algorithms applied . generally, masked data frame may lot metadata , provide tools working . However, part, expected handle metadata . metadata stored attributes, underneath hood, masked data frame just data frame may treated one.","code":"md <- md %>%   mutate(k=sample(1:m,n,replace=TRUE)) %>%   md_mark_latent(\"k\") print(md) #> Latent variables:  k  #> # A tibble: 5 × 4 #>   c1    c2    c3        k #>   <lgl> <lgl> <lgl> <int> #> 1 FALSE TRUE  TRUE      1 #> 2 TRUE  TRUE  TRUE      1 #> 3 TRUE  TRUE  TRUE      2 #> 4 FALSE FALSE FALSE     3 #> 5 FALSE FALSE FALSE     3 md <- md %>% md_set_contains(\"c\", \"k\", \"contains\") print(md) #> Latent variables:  k  #> # A tibble: 5 × 5 #>   c1    c2    c3        k contains #>   <lgl> <lgl> <lgl> <int> <lgl>    #> 1 FALSE TRUE  TRUE      1 FALSE    #> 2 TRUE  TRUE  TRUE      1 TRUE     #> 3 TRUE  TRUE  TRUE      2 TRUE     #> 4 FALSE FALSE FALSE     3 FALSE    #> 5 FALSE FALSE FALSE     3 FALSE md <- md %>% md_set_size(\"c\") print(md) #> Latent variables:  k  #> # A tibble: 5 × 6 #>   c1    c2    c3        k contains size_c #>   <lgl> <lgl> <lgl> <int> <lgl>     <int> #> 1 FALSE TRUE  TRUE      1 FALSE         2 #> 2 TRUE  TRUE  TRUE      1 TRUE          3 #> 3 TRUE  TRUE  TRUE      2 TRUE          3 #> 4 FALSE FALSE FALSE     3 FALSE         0 #> 5 FALSE FALSE FALSE     3 FALSE         0 md <- md %>% md_unmark_latent(\"k\") print(md) #> # A tibble: 5 × 6 #>   c1    c2    c3        k contains size_c #>   <lgl> <lgl> <lgl> <int> <lgl>     <int> #> 1 FALSE TRUE  TRUE      1 FALSE         2 #> 2 TRUE  TRUE  TRUE      1 TRUE          3 #> 3 TRUE  TRUE  TRUE      2 TRUE          3 #> 4 FALSE FALSE FALSE     3 FALSE         0 #> 5 FALSE FALSE FALSE     3 FALSE         0"},{"path":"https://queelius.github.io/md.tools/index.html","id":"metadata","dir":"","previous_headings":"","what":"Metadata","title":"Masked data tools","text":"read write data frames sharing others, including , prefer work plaintext files like CSV files, row corresponds set measurements experimental unit. However, may also want store metadata experiment generated data, may wish store information experimental units naturally fit data frame model. store metadata, take general approach storing JSON (Javscript Object Notation) comments tabular data file (like CSV), comment default anything # character line. may view metadata stored data : Note removed row.names attribute, since ’s quite long uninformative. lot metadata data data generated. particular, see data result simulation series system 3 exponentially distributed component lifetimes parameterized λ = (3,4,5)′ candidate model consistent conditions C1, C2, C3 series systems masked component cause failure form candidate sets.","code":"data <- md_read_csv_with_meta(\"./data-raw/exp_series_md_1.csv\") #> Rows: 1000 Columns: 8 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (5): t, k, t1, t2, t3 #> lgl (3): x1, x2, x3 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. print(data) #> Latent variables:  k t1 t2 t3  #> # A tibble: 1,000 × 8 #>          t     k      t1      t2     t3 x1    x2    x3    #>      <dbl> <dbl>   <dbl>   <dbl>  <dbl> <lgl> <lgl> <lgl> #>  1 0.144       2 0.281   0.144   0.266  TRUE  TRUE  FALSE #>  2 0.0105      1 0.0105  0.0141  0.0633 TRUE  FALSE TRUE  #>  3 0.0363      2 0.105   0.0363  0.545  TRUE  TRUE  FALSE #>  4 0.00972     1 0.00972 0.251   0.0960 TRUE  FALSE TRUE  #>  5 0.0377      3 0.0937  0.0943  0.0377 TRUE  FALSE TRUE  #>  6 0.0958      3 0.283   0.391   0.0958 FALSE TRUE  TRUE  #>  7 0.169       3 0.197   1.01    0.169  FALSE TRUE  TRUE  #>  8 0.270       3 0.322   0.371   0.270  FALSE TRUE  TRUE  #>  9 0.299       3 0.390   0.401   0.299  TRUE  FALSE TRUE  #> 10 0.00794     2 0.524   0.00794 0.120  FALSE TRUE  TRUE  #> # ℹ 990 more rows meta <- attributes(data) meta[\"row.names\"] <- NULL print(meta) #> $class #> [1] \"tbl_md\"     \"tbl_df\"     \"tbl\"        \"data.frame\" #>  #> $names #> [1] \"t\"  \"k\"  \"t1\" \"t2\" \"t3\" \"x1\" \"x2\" \"x3\" #>  #> $comment #> [1] \"this is a simulation test.\" #>  #> $param #> [1] 3 4 5 #>  #> $components #>        family param #> 1 exponential     3 #> 2 exponential     4 #> 3 exponential     5 #>  #> $candidate_conditions #> [1] \"C1\" \"C2\" \"C3\" #>  #> $latent #> [1] \"k\"  \"t1\" \"t2\" \"t3\" #>  #> $observable #> [1] \"t\"  \"x1\" \"x2\" \"x3\" #>  #> $num_comp #> [1] 3 #>  #> $sample_size #> [1] 1000"},{"path":"https://queelius.github.io/md.tools/reference/exp_series_md_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Masked data for a series system with exponentially distributed components. — exp_series_md_1","title":"Masked data for a series system with exponentially distributed components. — exp_series_md_1","text":"Masked data containing system lifetime attributes n=1000 series system parameter value theta=c(3,4,5) candidate model conditions 1, 2, 3 met.","code":""},{"path":"https://queelius.github.io/md.tools/reference/exp_series_md_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masked data for a series system with exponentially distributed components. — exp_series_md_1","text":"","code":"exp_series_md_1"},{"path":"https://queelius.github.io/md.tools/reference/exp_series_md_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Masked data for a series system with exponentially distributed components. — exp_series_md_1","text":"data frame 1000 rows 9 variables: t Real observable variable, series system lifetime k Integer latent variable, assigned index failed component t1 Real latent variable, lifetime component 1 t2 Real latent variable, lifetime component 2 t3 Real latent variable, lifetime component 3 x1 Boolean observable variable, TRUE indicates component assigned index 1 candidate set x2 Boolean observable variable, TRUE indicates component assigned index 2 candidate set x3 Boolean observable variable, TRUE indicates component assigned index 3 candidate set","code":""},{"path":"https://queelius.github.io/md.tools/reference/exp_series_md_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Masked data for a series system with exponentially distributed components. — exp_series_md_1","text":"https://github.com/queelius/masked.data/blob/master/data-raw/exp_series_md_1.R","code":""},{"path":"https://queelius.github.io/md.tools/reference/is_md.html","id":null,"dir":"Reference","previous_headings":"","what":"is_md — is_md","title":"is_md — is_md","text":"Test whether object masked data (tbl_md).","code":""},{"path":"https://queelius.github.io/md.tools/reference/is_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_md — is_md","text":"","code":"is_md(x)"},{"path":"https://queelius.github.io/md.tools/reference/is_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_md — is_md","text":"x object determine masked data","code":""},{"path":"https://queelius.github.io/md.tools/reference/md.html","id":null,"dir":"Reference","previous_headings":"","what":"md — md","title":"md — md","text":"Constructor masked data.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md — md","text":"","code":"md(x, ...)"},{"path":"https://queelius.github.io/md.tools/reference/md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md — md","text":"x object convert masked data. ... pass additional arguments `as_tibble`","code":""},{"path":"https://queelius.github.io/md.tools/reference/md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md — md","text":"masked data tibble additional attributes.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"md — md","text":"Converts object `x` masked data, tibble (data frame) extra attributes, `latent` attribute specify variables latent model.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":null,"dir":"Reference","previous_headings":"","what":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"Convert Boolean Matrix charsets (character set representation).","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"","code":"md_boolean_matrix_to_charsets(df, setvar = \"x\", cname = NULL, drop_set = FALSE)"},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"df data frame containing Boolean matrix converted. setvar character string specifying variable name prefix columns Boolean matrix input data frame. cname character string specifying name new column added output data frame. NULL, value 'setvar' used column name. Default NULL. drop_set logical value indicating whether drop original columns Boolean matrix output data frame. Default FALSE.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"data frame string representation Boolean matrix added new column.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"function takes Boolean matrix converts string representation. row matrix represented set enclosed curly braces. resulting string representation added new column input data frame.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_charsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"md_boolean_matrix_to_charsets — md_boolean_matrix_to_charsets","text":"","code":"# Create a sample data frame with a Boolean matrix df <- data.frame(x1 = c(TRUE, FALSE, TRUE), x2 = c(FALSE, TRUE, FALSE)) # Convert the Boolean matrix to string representation result <- md_boolean_matrix_to_charsets(df, setvar = \"x\", cname = \"X\") print(result) #>      x1    x2   X #> 1  TRUE FALSE {1} #> 2 FALSE  TRUE {2} #> 3  TRUE FALSE {1}"},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Boolean matrix `mat` to a list of integer vectors. — md_boolean_matrix_to_list","title":"Map Boolean matrix `mat` to a list of integer vectors. — md_boolean_matrix_to_list","text":"Map Boolean matrix `mat` list integer vectors.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Boolean matrix `mat` to a list of integer vectors. — md_boolean_matrix_to_list","text":"","code":"md_boolean_matrix_to_list(mat)"},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Boolean matrix `mat` to a list of integer vectors. — md_boolean_matrix_to_list","text":"mat Boolean matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Boolean matrix `mat` to a list of integer vectors. — md_boolean_matrix_to_list","text":"list integer vectors","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","title":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","text":"function takes Boolean matrix converts string representation. row matrix represented set enclosed curly braces. resulting string representation added new column input data frame.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","text":"","code":"md_boolean_matrix_to_str(   md,   setvar = \"x\",   cname = NULL,   drop_set = FALSE,   as_strings = TRUE )"},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","text":"md data frame containing Boolean matrix converted. setvar character string specifying variable name prefix columns Boolean matrix input data frame. cname character string specifying name new column added output data frame. NULL, value 'setvar' used column name. Default NULL. drop_set logical value indicating whether drop original columns Boolean matrix output data frame. Default FALSE. as_strings logical value indicating whether convert lists (sets) strings e.g. ` 1, 2 `.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","text":"data frame string representation Boolean matrix added new column.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_boolean_matrix_to_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Boolean Matrix to String Representation — md_boolean_matrix_to_str","text":"","code":"# Create a sample data frame with a Boolean matrix df <- data.frame(x1 = c(TRUE, FALSE, TRUE), x2 = c(FALSE, TRUE, FALSE)) # Convert the Boolean matrix to string representation result <- md_boolean_matrix_to_str(df, setvar = \"x\", cname = \"str_matrix\") print(result) #>      x1    x2 str_matrix #> 1  TRUE FALSE        {1} #> 2 FALSE  TRUE        {2} #> 3  TRUE FALSE        {1}"},{"path":"https://queelius.github.io/md.tools/reference/md_charsets_to_boolean_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"md_charsets_to_boolean_matrix — md_charsets_to_boolean_matrix","title":"md_charsets_to_boolean_matrix — md_charsets_to_boolean_matrix","text":"Function convert character vector column Boolean matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_charsets_to_boolean_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_charsets_to_boolean_matrix — md_charsets_to_boolean_matrix","text":"","code":"md_charsets_to_boolean_matrix(df, cname, drop_set = FALSE, setvar = NULL)"},{"path":"https://queelius.github.io/md.tools/reference/md_charsets_to_boolean_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_charsets_to_boolean_matrix — md_charsets_to_boolean_matrix","text":"df data frame cname character, name column containing charsets drop_set logical, TRUE drop column cname setvar character, prefix matrix encoding","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_charsets_to_boolean_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_charsets_to_boolean_matrix — md_charsets_to_boolean_matrix","text":"Boolean matrix representing charsets","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_charsets.html","id":null,"dir":"Reference","previous_headings":"","what":"md_convert_boolean_matrix_to_charsets — md_convert_boolean_matrix_to_charsets","title":"md_convert_boolean_matrix_to_charsets — md_convert_boolean_matrix_to_charsets","text":"Function convert Boolean matrix vector string sets (charsets) inverse operation `md_convert_charsets_to_boolean_matrix`.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_charsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_convert_boolean_matrix_to_charsets — md_convert_boolean_matrix_to_charsets","text":"","code":"md_convert_boolean_matrix_to_charsets(mat)"},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_charsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_convert_boolean_matrix_to_charsets — md_convert_boolean_matrix_to_charsets","text":"mat Boolean matrix representing set whose elements indexed natural numbers","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_charsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_convert_boolean_matrix_to_charsets — md_convert_boolean_matrix_to_charsets","text":"list character vectors representing sets","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"md_convert_boolean_matrix_to_list — md_convert_boolean_matrix_to_list","title":"md_convert_boolean_matrix_to_list — md_convert_boolean_matrix_to_list","text":"Map Boolean matrix `mat` (row represnts set Boolean vector, TRUE indicates membership FALSE otherwise) list integer vectors.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_convert_boolean_matrix_to_list — md_convert_boolean_matrix_to_list","text":"","code":"md_convert_boolean_matrix_to_list(mat)"},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_convert_boolean_matrix_to_list — md_convert_boolean_matrix_to_list","text":"mat Boolean matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_boolean_matrix_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_convert_boolean_matrix_to_list — md_convert_boolean_matrix_to_list","text":"list integer vectors","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_charsets_to_boolean_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","title":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","text":"Function convert character vector column Boolean matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_charsets_to_boolean_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","text":"","code":"md_convert_charsets_to_boolean_matrix(xs)"},{"path":"https://queelius.github.io/md.tools/reference/md_convert_charsets_to_boolean_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","text":"xs list integer sets","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_charsets_to_boolean_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","text":"Boolean matrix representing integer sets","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_charsets_to_boolean_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"md_charsets_to_boolean_matrix — md_convert_charsets_to_boolean_matrix","text":"","code":"xs <- c(\"{1,2}\", \"{2,3}\", \"{2}\") print(md_convert_charsets_to_boolean_matrix(xs)) #>       [,1] [,2]  [,3] #> [1,]  TRUE TRUE FALSE #> [2,] FALSE TRUE  TRUE #> [3,] FALSE TRUE FALSE ##       [,1]  [,2]  [,3] ## [1,]  TRUE  TRUE  FALSE ## [2,]  FALSE TRUE  TRUE ## [3,]  FALSE TRUE  FALSE"},{"path":"https://queelius.github.io/md.tools/reference/md_convert_list_to_boolean_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"md_convert_list_to_boolean_matrix — md_convert_list_to_boolean_matrix","title":"md_convert_list_to_boolean_matrix — md_convert_list_to_boolean_matrix","text":"Map list integer vectors (list represents set) Boolean matrix, row represents corresponding set Boolean vector.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_list_to_boolean_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_convert_list_to_boolean_matrix — md_convert_list_to_boolean_matrix","text":"","code":"md_convert_list_to_boolean_matrix(xs)"},{"path":"https://queelius.github.io/md.tools/reference/md_convert_list_to_boolean_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_convert_list_to_boolean_matrix — md_convert_list_to_boolean_matrix","text":"xs List integer vectors.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_convert_list_to_boolean_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_convert_list_to_boolean_matrix — md_convert_list_to_boolean_matrix","text":"Boolean matrix representation `xs`","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_decode_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","title":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","text":"`nrow(df)`--`p` matrix `var` encoded data frame `df` columns `var.1`,...,`var.p` `var1`,...,`varp`.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_decode_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","text":"","code":"md_decode_matrix(df, var)"},{"path":"https://queelius.github.io/md.tools/reference/md_decode_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","text":"df data frame contains matrix var symbolic name matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_decode_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","text":"matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_decode_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decodes a matrix from specified columns in a data frame. — md_decode_matrix","text":"matrix returned appropriate ordering denoted index, e.g., `.2` come `.4`. gaps matrix indexes, e.g., `.4` must also `.1,.2,.3`.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_encode_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"md_encode_matrix — md_encode_matrix","title":"md_encode_matrix — md_encode_matrix","text":"Encodes matrix data frame specified columns.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_encode_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_encode_matrix — md_encode_matrix","text":"","code":"md_encode_matrix(mat, var)"},{"path":"https://queelius.github.io/md.tools/reference/md_encode_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_encode_matrix — md_encode_matrix","text":"mat matrix var symbolic name matrix (prefix column names)","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_encode_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_encode_matrix — md_encode_matrix","text":"tibble (data frame) encoding matrix","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_latent.html","id":null,"dir":"Reference","previous_headings":"","what":"md_latent — md_latent","title":"md_latent — md_latent","text":"Obtain list latent variables masked data.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_latent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_latent — md_latent","text":"","code":"md_latent(md)"},{"path":"https://queelius.github.io/md.tools/reference/md_latent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_latent — md_latent","text":"md masked data retrieve latent variables .","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_latent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_latent — md_latent","text":"character vector containing latent variables","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_list_to_boolean_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"md_list_to_boolean_matrix — md_list_to_boolean_matrix","title":"md_list_to_boolean_matrix — md_list_to_boolean_matrix","text":"Map list integer vectors Boolean matrix.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_list_to_boolean_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_list_to_boolean_matrix — md_list_to_boolean_matrix","text":"","code":"md_list_to_boolean_matrix(xs)"},{"path":"https://queelius.github.io/md.tools/reference/md_list_to_boolean_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_list_to_boolean_matrix — md_list_to_boolean_matrix","text":"xs List integer vectors.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_list_to_boolean_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_list_to_boolean_matrix — md_list_to_boolean_matrix","text":"Boolean matrix representation `xs`","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_mark_latent.html","id":null,"dir":"Reference","previous_headings":"","what":"md_mark_latent — md_mark_latent","title":"md_mark_latent — md_mark_latent","text":"Mark variables masked data frame latent.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_mark_latent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_mark_latent — md_mark_latent","text":"","code":"md_mark_latent(md, vars)"},{"path":"https://queelius.github.io/md.tools/reference/md_mark_latent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_mark_latent — md_mark_latent","text":"md masked data modify vars character vector containing variables mark latent.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_mark_latent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_mark_latent — md_mark_latent","text":"modified masked data updated latent variables","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_read_csv_with_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"md_read_csv_with_meta — md_read_csv_with_meta","title":"md_read_csv_with_meta — md_read_csv_with_meta","text":"Read (masked) data frame table connection (e.g., url filename).","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_read_csv_with_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_read_csv_with_meta — md_read_csv_with_meta","text":"","code":"md_read_csv_with_meta(   file,   read_meta = T,   comment = \"#\",   max_meta_lns = 1000L,   ... )"},{"path":"https://queelius.github.io/md.tools/reference/md_read_csv_with_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_read_csv_with_meta — md_read_csv_with_meta","text":"file path file, connection, literal data read_meta whether read metadata populate attributes comment comment indicator, defaults `#` max_meta_lns limit metadata search indicated number lines ... additional arguments pass, like `skip`","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"md_set_contains — md_set_contains","title":"md_set_contains — md_set_contains","text":"Decorates data frame adding new column indicating whether set (represented boolean vector data frame specific prefix column encoding) contains element (stored specific column name). example, can used check candidate set contains failed component.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_set_contains — md_set_contains","text":"","code":"md_set_contains(df, setvar, elvar, cname = NULL)"},{"path":"https://queelius.github.io/md.tools/reference/md_set_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_set_contains — md_set_contains","text":"df data frame. setvar character string representing column prefix matrix encoding. elvar character string representing column name elements test membership setvar. cname optional character string name new column denoting outcomes membership tests. Defaults contains(setvar,elvar).","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_contains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_set_contains — md_set_contains","text":"decorated data frame new column cname indicating membership test outcomes.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_size.html","id":null,"dir":"Reference","previous_headings":"","what":"md_set_size — md_set_size","title":"md_set_size — md_set_size","text":"Decorates masked data frame adding new column indicating size sets (represented boolean vectors specific prefix column encoding).","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_set_size — md_set_size","text":"","code":"md_set_size(md, setvar = \"x\", cname = NULL)"},{"path":"https://queelius.github.io/md.tools/reference/md_set_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_set_size — md_set_size","text":"md masked data frame. setvar character string representing column prefix matrix encoding. Default \"x\". cname optional character string name new column denoting size sets. Defaults concatenating \"size_\", `setvar`.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_set_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_set_size — md_set_size","text":"decorated masked data frame new column `cname` indicating size sets.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_unmark_latent.html","id":null,"dir":"Reference","previous_headings":"","what":"md_unmark_latent — md_unmark_latent","title":"md_unmark_latent — md_unmark_latent","text":"Unmark variables masked data frame latent.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_unmark_latent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_unmark_latent — md_unmark_latent","text":"","code":"md_unmark_latent(md, vars)"},{"path":"https://queelius.github.io/md.tools/reference/md_unmark_latent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_unmark_latent — md_unmark_latent","text":"md masked data modify vars character vector containing variables unmark latent.","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_unmark_latent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"md_unmark_latent — md_unmark_latent","text":"modified masked data updated latent variables","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_write_csv_with_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"md_write_csv_with_meta — md_write_csv_with_meta","title":"md_write_csv_with_meta — md_write_csv_with_meta","text":"Write data frame object CSV (comma separated file), optionally associated attribute data (stored JSON comments)","code":""},{"path":"https://queelius.github.io/md.tools/reference/md_write_csv_with_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"md_write_csv_with_meta — md_write_csv_with_meta","text":"","code":"md_write_csv_with_meta(df, file, comment = \"#\", ...)"},{"path":"https://queelius.github.io/md.tools/reference/md_write_csv_with_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"md_write_csv_with_meta — md_write_csv_with_meta","text":"df data frame attributes write (like masked data frame) file filename csv comment denotes comment block ... additional arguments pass","code":""},{"path":"https://queelius.github.io/md.tools/reference/print.tbl_md.html","id":null,"dir":"Reference","previous_headings":"","what":"print.tbl_md — print.tbl_md","title":"print.tbl_md — print.tbl_md","text":"Print method masked data (tbl_md).","code":""},{"path":"https://queelius.github.io/md.tools/reference/print.tbl_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.tbl_md — print.tbl_md","text":"","code":"# S3 method for tbl_md print(x, drop_latent = FALSE, max.print = NULL, ...)"},{"path":"https://queelius.github.io/md.tools/reference/print.tbl_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.tbl_md — print.tbl_md","text":"x masked data object (tbl_md) print. drop_latent logical value. TRUE, latent random variables dropped. Default FALSE. max.print integer specifying maximum number rows /columns print. Default NULL (limit). ... Additional arguments pass print method.","code":""}]
